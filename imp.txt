Installing drupal site
1 Create virtual host 
2 Extract the drupal core inside virtual host
3 Browse the directory from browser
4 Install
5 Change ownership to www-data
6 Create .htaccess file in sites/default/files
7 Change AllowOverride to All instead of none in VHOST config file and remove Options Indexes FollowSymLinks
  
8 Change permissions (reference  https://www.drupal.org/node/244924  ,  Linux servers #
inside Web
[root@localhost]cd /path_to_drupal_installation
[root@localhost]chown -R greg:www-data .
[root@localhost]find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;
[root@localhost]find . -type f -exec chmod u=rw,g=r,o= '{}' \;

inside sites

[root@localhost]cd /path_to_drupal_installation/sites
[root@localhost]find . -type d -name files -exec chmod ug=rwx,o= '{}' \;
[root@localhost]for d in ./*/files
do
   find $d -type d -exec chmod ug=rwx,o= '{}' \;
   find $d -type f -exec chmod ug=rw,o= '{}' \;
done


admin/config/site settings save configuration ,then it saves the .htaccess file.
which solves the public files directory error in drupal

9 For clearing drupal cache 
  drush cache-rebuild



///////////////////////////////////////////////////////////////////////////////////////////////
Discussion
Apache responds to json file.

Apache static and dynamic module

How to add row in database: using insert query.
MPM: Prefork and worker in apache.

MPM. Multi-Processing Module (Apache)

Prefork. With the Prefork module installed, Apache is a non-threaded, pre-forking web server. That means that each Apache child process contains a single thread and handles one request at a time. Because of that, it consumes more resources than the threaded MPMs: Worker and Event.



mod_php means PHP, as an Apache module. Basically, when loading mod_php as an Apache module, it allows Apache to interpret PHP files (those are interpreted by mod_php ).


Two types of modules in apache: core and shared ,whenever a request is sent to apache it turns on each and every modules for processing the request thus creating lots of processes but in nginx it creates threads and e.g 5 threads comprise 1 process.



installing drupal modules in terminal using composer

composer require drupal/pathauto       here,pathauto is the name of the module from website
pathauto is used for generating custom url patterns.


///////////////////////////////////////////////////////////////////////////////////////////////
Webform module : For sending email u need to install phpmailer 
Adds SMTP support for sending e-mails using the PHPMailer library. Comes with detailed configuration instructions for how to use Google Mail as mail server.
The main differences to the SMTP Authentication Support module are:

This module uses the PHPMailer library itself, and the SMTP Authentication Support module has forked and includes the smtp and mail classes from PHPMailer library.
This module has support for improved bulk-mail performance through SMTP keep-alive connections (if supported by the mail server).
This module has a built-in e-mail rerouting option (useful during site building and development).
installed  league/oauth2-google for authentication purpose




///////////////////////////////////////////////////////////////////////////////////////////////
Sending thank you mail on submit using webform module:
1.Install PHPmailer module.
2.Install smtp authentication support module.
3.open web/core/modules/system/config/install      system.mail.yml.
4.change  from php_mail 
  
  interface:
 default: 'SMTPMailSystem'     for using smtp authentication support
                               and change it to PHPMailer in case you are using phpmailer.


 Never change manually .yml files instead export configuration and copy to config/sync folder and then sychronise.
 5. From your gmail account turn on allow less secure apps ON in case you are using smtp server of gmail: smtp.gmail.com
 6. SMTP port: 465 in case of gmail. 
 7. Use SSL encrypted protocol.
 8.SMTP AUTHENTICATION
    Username:anjan.chakraborty@innoraft.com
    password:my password
///////////////////////////////////////////////////////////////////////////////////////////////


Check for errors behind the scenes
As an alternative between showing no errors and showing all errors, you may wish to monitor the errors being generated by your site by running

tail -f /var/log/apache2/error.log
on your server.

Change settings in your dev site
You can show all errors by adding a few lines to your local testing site's settings.php:

error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);
In addition, navigate to Administration→ Configuration→ Development → logging and errors and select "All messages". (This sets $conf['error_level'] = 2;.)

Switch on strict PHP error reporting
Or you can go through your development site's php.ini file, in the php folder, and switch all error reporting on. To do this, check through your php.ini file and set error_reporting to E_ALL. The documentation there is very thorough, and you may find a different setting that's better suited to your needs. Warning: as the PHP documentation states, this setting is only for development sites, not for production sites.